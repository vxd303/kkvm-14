name: Build AOSP LLVM14 + OLLVM LegacyPass (preflight)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      TMPDIR: ${{ github.workspace }}/.tmp
      CCACHE_DIR: ${{ github.workspace }}/.ccache

    steps:
      
      # Lấy manifest_8481493.xml từ repo của BẠN (thư mục gốc)
      - name: Checkout repo (for manifest)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential ca-certificates cmake curl git ninja-build \
            python3 bison ccache xz-utils rsync jq
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      - name: Install repo tool
        run: |
          sudo curl -sSL https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo
          sudo chmod +x /usr/local/bin/repo
          repo --version || true

      
     # 7) Tải patch LegacyPass + clone upstream llvm-project (14.x) rồi apply patch
      - name: Fetch LegacyPass patch + Clone upstream llvm-project (14.x)
        run: |
          set -eux
          curl -L "https://heroims.github.io/obfuscator/LegacyPass/ollvm14.patch" -o ollvm14.patch
          git clone --depth=1 --branch master https://github.com/MarkRepo/llvm-14.0.6.git upstream-llvm
          cd upstream-llvm
          
          # Thêm các lệnh tạo thư mục cần thiết trước khi áp dụng patch
          mkdir -p ./llvm/lib/Transforms/Obfuscation
          mkdir -p ./llvm/include/llvm/Transforms/Obfuscation
          
          if git apply ../ollvm14.patch; then
            echo "LegacyPass patch applied to upstream llvm-project"
          else
            echo "Patch failed cleanly; retry with --reject --ignore-whitespace"
            git apply --reject --ignore-whitespace ../ollvm14.patch
            find . -name '*.rej' -print -exec sed -n '1,120p' {} \; || true
          fi

     # 8) Nén và tải lên chỉ các file đã bị thay đổi
      - name: Archive and upload only patched files
        run: |
          set -eux
          cd upstream-llvm
      
          # Áp dụng patch và cập nhật index để Git hiểu rename/add đúng nghĩa
          git reset --hard
          git apply --index ../ollvm14.patch || git apply --reject --ignore-whitespace ../ollvm14.patch
          # Nếu có *.rej thì in ra cho dễ debug
          (grep -r --include="*.rej" -n . || true)
      
          # Đảm bảo index khớp working tree (ghi nhận file mới/rename)
          git add -A
      
          # Lấy danh sách file thay đổi so với HEAD (kể cả A/M/R, bỏ D)
          git diff --name-only -z --diff-filter=ACMR HEAD \
            | xargs -0 -I{} sh -c 'mkdir -p "$(dirname "../_patched/{}")"; cp --parents -a "{}" "../_patched/"'
      
          cd ..
          (cd _patched && zip -r ../patched-llvm.zip .)

          
      - name: Upload patched llvm-project
        uses: actions/upload-artifact@v4
        with:
          name: patched-llvm-project
          path: patched-llvm.zip
